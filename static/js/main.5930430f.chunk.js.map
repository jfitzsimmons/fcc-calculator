{"version":3,"sources":["Support.js","App.js","logo.svg","serviceWorker.js","index.js"],"names":["clearStyle","background","operatorStyle","equalsStyle","position","height","bottom","Buttons","_Component","Object","_Users_joefitzsimmons_Documents_GIT_fcc_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_joefitzsimmons_Documents_GIT_fcc_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_joefitzsimmons_Documents_GIT_fcc_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_Users_joefitzsimmons_Documents_GIT_fcc_calculator_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_joefitzsimmons_Documents_GIT_fcc_calculator_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","onClick","props","initialize","className","style","operators","numbers","decimal","evaluate","Component","Output","_Component2","currentValue","Formula","_Component3","formula","isOperator","endsWithOperator","App","_this","call","state","currentVal","prevVal","currentSign","lastClicked","maxDigitWarning","bind","_Users_joefitzsimmons_Documents_GIT_fcc_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleOperators","handleEvaluate","handleDecimal","handleNumbers","_this2","setState","setTimeout","includes","expression","test","slice","replace","answer","Math","round","eval","toString","evaluated","e","target","length","match","react__WEBPACK_IMPORTED_MODULE_6___default","_Support_js__WEBPACK_IMPORTED_MODULE_9__","href","module","exports","__webpack_require__","p","Boolean","window","location","hostname","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5930430f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\nconst clearStyle = {background: '#ac3939'},\noperatorStyle = {background: '#666666'},\nequalsStyle = {\n  background: '#004466',\n  position: 'absolute',\n  height: 130,\n  bottom: 5\n};\n\nexport class Buttons extends Component {\n  render() {\n    return (\n      <div>\n        <button id=\"clear\"    value='AC' onClick={this.props.initialize} className='jumbo' style={clearStyle}>AC</button>\n        <button id=\"divide\"   value='/'  onClick={this.props.operators} style={operatorStyle}>/</button>\n        <button id=\"multiply\" value='x'  onClick={this.props.operators} style={operatorStyle}>x</button>\n        <button id=\"seven\"    value='7'  onClick={this.props.numbers} >7</button>\n        <button id=\"eight\"    value='8'  onClick={this.props.numbers} >8</button>\n        <button id=\"nine\"     value='9'  onClick={this.props.numbers} >9</button>\n        <button id=\"subtract\" value='â€‘'  onClick={this.props.operators} style={operatorStyle}>-</button>\n        <button id=\"four\"     value='4'  onClick={this.props.numbers} >4</button>\n        <button id=\"five\"     value='5'  onClick={this.props.numbers} >5</button>\n        <button id=\"six\"      value='6'  onClick={this.props.numbers} >6</button>\n        <button id=\"add\"      value='+'  onClick={this.props.operators} style={operatorStyle}>+</button>\n        <button id=\"one\"      value='1'  onClick={this.props.numbers} >1</button>\n        <button id=\"two\"      value='2'  onClick={this.props.numbers} >2</button>\n        <button id=\"three\"    value='3'  onClick={this.props.numbers} >3</button>\n        <button id=\"zero\"     value='0'  onClick={this.props.numbers} className='jumbo'>0</button>\n        <button id=\"decimal\"  value='.'  onClick={this.props.decimal} >.</button>\n        <button id=\"equals\"   value='='  onClick={this.props.evaluate} style={equalsStyle}>=</button>\n      </div>\n    );\n  }\n}\n\nexport class Output extends Component {\n  render () {\n    return <div id=\"display\" className=\"outputScreen\">{this.props.currentValue}</div>\n  }\n};\n\nexport class Formula extends Component {\n  render() {\n    return <div className=\"formulaScreen\">{this.props.formula}</div>\n  }\n};\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Buttons, Formula, Output } from './Support.js';\n// VARS:\nconst isOperator = /[x/+â€‘]/,\n      endsWithOperator = /[x+â€‘/]$/\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentVal: '0',\n      prevVal: '0',\n      formula: '',\n      currentSign: 'pos',\n      lastClicked: ''\n    }\n    this.maxDigitWarning = this.maxDigitWarning.bind(this);\n    this.handleOperators = this.handleOperators.bind(this);\n    this.handleEvaluate = this.handleEvaluate.bind(this);\n    this.initialize = this.initialize.bind(this);\n    this.handleDecimal = this.handleDecimal.bind(this);\n    this.handleNumbers = this.handleNumbers.bind(this);\n  }\n\n  maxDigitWarning() {\n    this.setState({\n      currentVal: 'Digit Limit Met',\n      prevVal: this.state.currentVal\n    });\n    setTimeout(() => this.setState({currentVal: this.state.prevVal}), 1000);\n  }\n\n  handleEvaluate() {\n    if (!this.state.currentVal.includes('Limit')) {\n      let expression = this.state.formula;\n      if (endsWithOperator.test(expression)) expression = expression.slice(0, -1);\n      expression = expression.replace(/x/g, \"*\").replace(/â€‘/g, \"-\");\n      let answer = Math.round(1000000000000 * eval(expression)) / 1000000000000;\n      this.setState({\n        currentVal: answer.toString(),\n        formula: expression.replace(/\\*/g, 'â‹…').replace(/-/g, 'â€‘') + '=' + answer,\n        prevVal: answer,\n        evaluated: true\n      });\n    }\n  }\n\n  handleOperators(e) {\n    if (!this.state.currentVal.includes('Limit')) {\n      this.setState({currentVal: e.target.value,evaluated: false});\n      if (this.state.formula.includes('=')) {\n        this.setState({formula: this.state.prevVal + e.target.value}); // comment 1\n      } else {\n        this.setState({ // comment 2\n          prevVal: !isOperator.test(this.state.currentVal) ?\n            this.state.formula :\n            this.state.prevVal,\n          formula: !isOperator.test(this.state.currentVal) ?\n            this.state.formula += e.target.value :\n            this.state.prevVal += e.target.value\n        });\n      }\n    }\n  }\n\n  handleNumbers(e) {\n    if (!this.state.currentVal.includes('Limit')) {\n      this.setState({evaluated: false})\n      if (this.state.currentVal.length > 21) {\n        this.maxDigitWarning();\n      } else if (this.state.evaluated === true) {\n        this.setState({\n          currentVal: e.target.value,\n          formula: e.target.value != '0' ? e.target.value : '',\n        });\n      } else {\n        this.setState({\n          currentVal:\n            this.state.currentVal === '0' ||\n            isOperator.test(this.state.currentVal) ?\n            e.target.value : this.state.currentVal + e.target.value,\n          formula:\n            this.state.currentVal === '0' && e.target.value === '0' ?\n            this.state.formula :\n            /([^.0-9]0)$/.test(this.state.formula) ?\n            this.state.formula.slice(0, -1) + e.target.value :\n            this.state.formula + e.target.value,\n        });\n      }\n    }\n  }\n\n  handleDecimal() {\n    if (this.state.evaluated === true) {\n      this.setState({\n        currentVal: '0.',\n        formula: '0.',\n        evaluated: false});\n    } else if (!this.state.currentVal.includes('.') &&\n      !this.state.currentVal.includes('Limit')) {\n      this.setState({evaluated: false})\n      if (this.state.currentVal.length > 21) {\n        this.maxDigitWarning();\n      } else if (endsWithOperator.test(this.state.formula) ||\n        this.state.currentVal === '0' && this.state.formula === '') {\n        this.setState({\n          currentVal: '0.',\n          formula: this.state.formula + '0.'\n        });\n      } else {\n        this.setState({\n          currentVal: this.state.formula.match(/(-?\\d+\\.?\\d*)$/)[0] + '.',\n          formula: this.state.formula + '.',\n        });\n      }\n    }\n  }\n\n  initialize() {\n    this.setState({\n      currentVal: '0',\n      prevVal: '0',\n      formula: '',\n      currentSign: 'pos',\n      lastClicked: ''\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='calculator'>\n          <Formula formula={this.state.formula.replace(/x/g, 'â‹…')} />\n          <Output currentValue={this.state.currentVal} />\n          <Buttons evaluate={this.handleEvaluate}\n                   operators={this.handleOperators}\n                   initialize={this.initialize}\n                   decimal={this.handleDecimal}\n                   numbers={this.handleNumbers} />\n        </div>\n        <div className=\"author\"> Designed and Coded By <br />\n          <a target=\"_blank\" href=\"https://goo.gl/6NNLMG\">\n            Peter Weinberg\n          </a>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}